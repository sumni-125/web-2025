/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-23 00:55:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class tripPlace_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1745368944776L));
    _jspx_dependants.put("jar:file:/C:/Users/user/Documents/javafullstack2025/06_MVC프로젝트/발표자료/TripMate/TripMate/ws/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/TripMate/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>여행지 선택</title>\r\n");
      out.write("<link href=\"css/header.css\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap');\r\n");
      out.write("* {\r\n");
      out.write("	font-family: \"Noto Sans KR\", serif;\r\n");
      out.write("	font-optical-sizing: auto;\r\n");
      out.write("	font-weight: 400;\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("	body, html{\r\n");
      out.write("		padding: 0;\r\n");
      out.write("		margin: 0;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.wrap{\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	background-color:#f5f5f5;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.title{\r\n");
      out.write("		margin-left: 200px;\r\n");
      out.write("		display: flex;\r\n");
      out.write("	}\r\n");
      out.write("	.title h1{\r\n");
      out.write("		font-size: 50px;\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("	}\r\n");
      out.write("	.title p{\r\n");
      out.write("		font-size: 20px;\r\n");
      out.write("		margin: 0px;\r\n");
      out.write("		transform: translate(30px,70px);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.place-list{\r\n");
      out.write("		background-color: white; \r\n");
      out.write("		width: 1200px;\r\n");
      out.write("		\r\n");
      out.write("		border-radius: 3px;\r\n");
      out.write("		padding: 30px 0;\r\n");
      out.write("		margin: 0px auto;\r\n");
      out.write("\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-wrap: wrap;\r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		box-shadow: 0 2px 8px rgba(0,0,0,0.2);\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.place{\r\n");
      out.write("		border-radius: 100px;\r\n");
      out.write("		width: 200px;\r\n");
      out.write("		height: 200px;\r\n");
      out.write("		margin: 20px 45px;\r\n");
      out.write("		position: relative;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.place img{\r\n");
      out.write("		border-radius: 100px;\r\n");
      out.write("		width: 200px;\r\n");
      out.write("		height: 200px;\r\n");
      out.write("		object-fit: cover;\r\n");
      out.write("		box-shadow: 0 2px 8px rgba(0,0,0,0.4);\r\n");
      out.write("		transition: 0.2s;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.place:hover img{\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		opacity: 0.5;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.place-name{\r\n");
      out.write("		position: absolute;\r\n");
      out.write("		top: 50%;\r\n");
      out.write("		left: 50%;\r\n");
      out.write("		transform: translate(-50%, -50%);\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("		font-size: 35px;\r\n");
      out.write("		color: white; \r\n");
      out.write("		text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\r\n");
      out.write("	}\r\n");
      out.write("	 \r\n");
      out.write("	.place:hover .place-name{\r\n");
      out.write("		color: black;\r\n");
      out.write("		text-shadow: none;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#prev-btn, #complete-btn{\r\n");
      out.write("		width: 180px;\r\n");
      out.write("		height: 45px; \r\n");
      out.write("		padding: 10px 20px;\r\n");
      out.write("		border-radius: 5px;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		font-weight: 500;\r\n");
      out.write("		font-size: 28px;\r\n");
      out.write("		box-shadow: 0 2px 8px rgba(0,0,0,0.3);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#prev-btn:hover, #complete-btn:hover{\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		filter: brightness(110%);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#prev-btn{\r\n");
      out.write("		background-color: white;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#complete-btn{\r\n");
      out.write("		background-color: #0095F6;\r\n");
      out.write("		color: white;	\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.btn-wrap{\r\n");
      out.write("		display:flex;\r\n");
      out.write("		padding: 40px 0;\r\n");
      out.write("		margin: 0px 160px;\r\n");
      out.write("		justify-content: space-between;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.place.selected {\r\n");
      out.write("    	opacity: 0.7;\r\n");
      out.write("    	box-shadow: 0 0 0 6px #0095F6;;\r\n");
      out.write("}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("	<div class=\"logo\">\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/main\"><img class=\"logoImg\" src=\"image/logo.png\"\r\n");
      out.write("			alt=\"\"></a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/myTrip\">여행일정</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/mainsearch\">관광지</a>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/mainblog\">블로그</a>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/myPage\">마이페이지</a>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</header>\r\n");
      out.write("<div class=\"wrap\">\r\n");
      out.write("	<div class=\"title\">\r\n");
      out.write("	<h1>여행지 선택</h1>\r\n");
      out.write("	<p>어디로 여행을 갈까요?</p>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"place-list\">\r\n");
      out.write("		");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("    <div id=\"selected-places\"></div>\r\n");
      out.write("    <div class=\"btn-wrap\">\r\n");
      out.write("    	<div type=\"button\" id=\"prev-btn\" onclick=\"location.href='#'\">이전</div>\r\n");
      out.write("    	<div type=\"button\" id=\"complete-btn\">다음</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("	\r\n");
      out.write("<script>\r\n");
      out.write("	\r\n");
      out.write("	let selectedPlace = null;\r\n");
      out.write("	\r\n");
      out.write("	document.querySelectorAll('.place-btn').forEach(btn => {\r\n");
      out.write("	 btn.onclick = function() {\r\n");
      out.write("	     \r\n");
      out.write("		 //이전에 선택한 여행지가 있으면?? 그거 선택해제\r\n");
      out.write("	     document.querySelectorAll('.place').forEach(div => {\r\n");
      out.write("	         div.classList.remove('selected');\r\n");
      out.write("	     });\r\n");
      out.write("	\r\n");
      out.write("	     //새로 선택한거 표시\r\n");
      out.write("	     selectedPlace = btn.dataset.name;\r\n");
      out.write("	     btn.parentElement.classList.add('selected');\r\n");
      out.write("	     showSelected();\r\n");
      out.write("	 }\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function showSelected() {\r\n");
      out.write("	 const box = document.getElementById('selected-places');\r\n");
      out.write("	 box.innerHTML = '';\r\n");
      out.write("	 \r\n");
      out.write("	 \r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	document.getElementById('complete-btn').onclick = function() {\r\n");
      out.write("	 if (!selectedPlace) {\r\n");
      out.write("	     alert('여행지를 하나 선택해주세요.');\r\n");
      out.write("	     return;\r\n");
      out.write("	 }\r\n");
      out.write("	 //확인용\r\n");
      out.write("	 alert('선택 완료: ' + selectedPlace);\r\n");
      out.write("	 location.href='");
      out.print(request.getContextPath());
      out.write("/tripCal';\r\n");
      out.write("	 //다음페이지 넘어가게해야도ㅣㅁ\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write("const selected = new Set();\r\n");
      out.write("\r\n");
      out.write("document.querySelectorAll('.place-btn').forEach(btn => {\r\n");
      out.write("    btn.onclick = function() {\r\n");
      out.write("    	\r\n");
      out.write("        const name = btn.dataset.name;\r\n");
      out.write("        if (!selected.has(name)) {\r\n");
      out.write("            selected.add(name);\r\n");
      out.write("            showSelected();\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function showSelected() {\r\n");
      out.write("    const box = document.getElementById('selected-places');\r\n");
      out.write("    box.innerHTML = '';\r\n");
      out.write("    \r\n");
      out.write("    selected.forEach(name => {\r\n");
      out.write("        const div = document.createElement('div');\r\n");
      out.write("        div.textContent = name + ' ';\r\n");
      out.write("        \r\n");
      out.write("        const del = document.createElement('button');\r\n");
      out.write("        del.textContent = '삭제';\r\n");
      out.write("        del.onclick = function() {\r\n");
      out.write("            selected.delete(name);\r\n");
      out.write("            showSelected();\r\n");
      out.write("        };\r\n");
      out.write("        \r\n");
      out.write("        div.appendChild(del);\r\n");
      out.write("        box.appendChild(div);\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("document.getElementById('complete-btn').onclick = function() {\r\n");
      out.write("   \r\n");
      out.write("	if(selected.size == 0) {\r\n");
      out.write("        alert('여행지를 선택하세요.');\r\n");
      out.write("        return;\r\n");
      out.write("    }\r\n");
      out.write("	\r\n");
      out.write("    alert('선택 완료: ' + Array.from(selected).join(', '));\r\n");
      out.write("\r\n");
      out.write("};\r\n");
      out.write("*/\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/views/tripPlace.jsp(163,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("place");
    // /WEB-INF/views/tripPlace.jsp(163,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/tripPlace.jsp(163,2) '${placeList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${placeList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	    <div class=\"place\">\r\n");
          out.write("		    <div class=\"place-name\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${place.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("		    <img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${place.imgUrl}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" alt=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${place.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" type=\"button\" class=\"place-btn\" data-name=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${place.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("	    \r\n");
          out.write("<!--<button type=\"button\" class=\"place-btn\" data-name=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${place.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('"');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${place.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</button>-->\r\n");
          out.write("\r\n");
          out.write("		</div>\r\n");
          out.write("	    ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }
}
