/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-23 00:55:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import tripMate.model.Schedule;
import java.util.ArrayList;

public final class tripList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1745368944776L));
    _jspx_dependants.put("jar:file:/C:/Users/user/Documents/javafullstack2025/06_MVC프로젝트/발표자료/TripMate/TripMate/ws/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/TripMate/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("tripMate.model.Schedule");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<link href=\"css/header.css\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	font-family: 'Arial', sans-serif;\r\n");
      out.write("	background-color: #f5f5f5;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-top: 40px;\r\n");
      out.write("	color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".top-bar {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 60px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".add-btn-container {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 20px;\r\n");
      out.write("	right: 40px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".add-btn {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	background-color: #28a745;\r\n");
      out.write("	color: white;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	transition: background-color 0.2s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".add-btn:hover {\r\n");
      out.write("	background-color: #218838;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wrap {\r\n");
      out.write("	width: 600px;\r\n");
      out.write("	margin: 30px auto;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	gap: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".trip-card {\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	transition: transform 0.2s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".trip-card:hover {\r\n");
      out.write("	transform: scale(1.02);\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".trip-title {\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	color: #007bff;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".trip-place {\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	color: #333;\r\n");
      out.write("	margin-bottom: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".trip-dates {\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	color: #666;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".budget-btn {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	padding: 8px 14px;\r\n");
      out.write("	background-color: #ffc107;\r\n");
      out.write("	color: #333;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	font-size: 13px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	transition: background-color 0.2s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".budget-btn:hover {\r\n");
      out.write("	background-color: #e0a800;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");

ArrayList<Schedule> scheduleList = (ArrayList<Schedule>) request.getAttribute("schedule");

      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("	<div class=\"logo\">\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/main\"><img class=\"logoImg\" src=\"image/logo.png\"\r\n");
      out.write("			alt=\"\"></a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/myTrip\">여행일정</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/mainsearch\">관광지</a>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/mainblog\">블로그</a>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<a href=\"");
      out.print(request.getContextPath());
      out.write("/myPage\">마이페이지</a>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"top-bar\">\r\n");
      out.write("		<h1>나의 여행</h1>\r\n");
      out.write("		<div class=\"add-btn-container\">\r\n");
      out.write("			<a href=\"");
      out.print(request.getContextPath());
      out.write("/tripPlace\" class=\"add-btn\">일정\r\n");
      out.write("				추가하기</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"wrap\">\r\n");
      out.write("		");

		if (scheduleList != null && !scheduleList.isEmpty()) {
			for (Schedule s : scheduleList) {
		
      out.write("\r\n");
      out.write("		<div class=\"trip-card\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/tripSet?sd_code=");
      out.print(s.getSd_code());
      out.write("'\">\r\n");
      out.write("			<div class=\"trip-title\">");
      out.print(s.getName());
      out.write("</div>\r\n");
      out.write("			<div class=\"trip-place\">\r\n");
      out.write("				여행지:\r\n");
      out.write("				");
      out.print(s.getPlace_name());
      out.write("</div>\r\n");
      out.write("			<div class=\"trip-dates\">\r\n");
      out.write("				여행 기간:\r\n");
      out.write("				");
      out.print(s.getStart_date());
      out.write("\r\n");
      out.write("				~\r\n");
      out.write("				");
      out.print(s.getEnd_date());
      out.write("</div>\r\n");
      out.write("			<div style=\"text-align: right; margin-top: 15px;\">\r\n");
      out.write("				<a href=\"cost?sd_code=");
      out.print(s.getSd_code());
      out.write("\" class=\"budget-btn\">가계부\r\n");
      out.write("					추가하기</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		}
		} else {
		
      out.write("\r\n");
      out.write("		<div class=\"trip-card\" style=\"text-align: center; color: #999;\">등록된\r\n");
      out.write("			여행이 없습니다.</div>\r\n");
      out.write("		");

		}
		
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
