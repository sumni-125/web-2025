/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-23 00:59:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loadup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>블로그 등록</title>\n");
      out.write("<style>\n");
      out.write("    .wrap {\n");
      out.write("        width: 1000px;\n");
      out.write("        margin: 30px auto;\n");
      out.write("        padding: 20px;\n");
      out.write("        background-color: #f9f9f9;\n");
      out.write("        border-radius: 10px;\n");
      out.write("        display: flex;\n");
      out.write("        justify-content: space-between;\n");
      out.write("        border: 1px solid #ddd;\n");
      out.write("        box-sizing: border-box;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .text_wrap {\n");
      out.write("        width: 500px;\n");
      out.write("        padding: 20px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .title {\n");
      out.write("        width: 100%;\n");
      out.write("        height: 50px;\n");
      out.write("        padding: 10px;\n");
      out.write("        font-size: 18px;\n");
      out.write("        margin-top: 10px;\n");
      out.write("        border: 1px solid #ddd;\n");
      out.write("        border-radius: 8px;\n");
      out.write("        box-sizing: border-box;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .content_tx {\n");
      out.write("        width: 100%;\n");
      out.write("        height: 250px;\n");
      out.write("        padding: 10px;\n");
      out.write("        font-size: 16px;\n");
      out.write("        margin-top: 10px;\n");
      out.write("        border: 1px solid #ddd;\n");
      out.write("        border-radius: 8px;\n");
      out.write("        box-sizing: border-box;\n");
      out.write("        resize: vertical;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .image_wrap {\n");
      out.write("        width: 350px;\n");
      out.write("        padding: 20px;\n");
      out.write("        border: 1px solid #ddd;\n");
      out.write("        background-color: #fff;\n");
      out.write("        border-radius: 10px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .image_wrap img {\n");
      out.write("        width: 100%;\n");
      out.write("        height: auto;\n");
      out.write("        object-fit: cover;\n");
      out.write("        border-radius: 8px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .img_box {\n");
      out.write("        width: 100%;\n");
      out.write("        height: 250px;\n");
      out.write("        margin-top: 10px;\n");
      out.write("        overflow: hidden;\n");
      out.write("        display: flex;\n");
      out.write("        justify-content: center;\n");
      out.write("        align-items: center;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .btn-upload {\n");
      out.write("        width: 150px;\n");
      out.write("        height: 40px;\n");
      out.write("        background: #007bff;\n");
      out.write("        color: white;\n");
      out.write("        border-radius: 10px;\n");
      out.write("        font-weight: 500;\n");
      out.write("        cursor: pointer;\n");
      out.write("        text-align: center;\n");
      out.write("        line-height: 40px;\n");
      out.write("        margin-top: 20px;\n");
      out.write("        border: none;\n");
      out.write("        transition: background-color 0.3s;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .btn-upload:hover {\n");
      out.write("        background: #0056b3;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    #file {\n");
      out.write("        display: none;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .submit_btn {\n");
      out.write("        width: 150px;\n");
      out.write("        height: 50px;\n");
      out.write("        background: #28a745;\n");
      out.write("        color: white;\n");
      out.write("        border: none;\n");
      out.write("        border-radius: 25px;\n");
      out.write("        font-size: 18px;\n");
      out.write("        cursor: pointer;\n");
      out.write("        margin-top: 20px;\n");
      out.write("        margin-right: 10px;\n");
      out.write("        transition: background-color 0.3s;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .submit_btn:hover {\n");
      out.write("        background: #218838;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cancel_btn {\n");
      out.write("        width: 150px;\n");
      out.write("        height: 50px;\n");
      out.write("        background: #6c757d;\n");
      out.write("        color: white;\n");
      out.write("        border: none;\n");
      out.write("        border-radius: 25px;\n");
      out.write("        font-size: 18px;\n");
      out.write("        cursor: pointer;\n");
      out.write("        margin-top: 20px;\n");
      out.write("        transition: background-color 0.3s;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .cancel_btn:hover {\n");
      out.write("        background: #5a6268;\n");
      out.write("    }\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/blogreg\" method=\"post\" enctype=\"multipart/form-data\">\n");
      out.write("    <div class=\"wrap\">\n");
      out.write("        <!-- 이미지 업로드 영역 -->\n");
      out.write("        <div class=\"image_wrap\">\n");
      out.write("            <label for=\"file\" class=\"btn-upload\">사진 추가</label>\n");
      out.write("            <input type=\"file\" name=\"file\" id=\"file\" accept=\"image/*\">\n");
      out.write("            <div class=\"img_box\" id=\"imbox\"></div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- 텍스트 입력 영역 -->\n");
      out.write("        <div class=\"text_wrap\">\n");
      out.write("            <input type=\"text\" class=\"title\" name=\"blog_title\" placeholder=\"제목 입력\">\n");
      out.write("            <textarea class=\"content_tx\" name=\"blog_content\" placeholder=\"내용 입력\"></textarea>\n");
      out.write("            <div style=\"display: flex; gap: 10px;\">\n");
      out.write("                <button class=\"submit_btn\" type=\"submit\">등록하기</button>\n");
      out.write("                <button type=\"button\" class=\"cancel_btn\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mainblog'\">취소</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("// 이미지 미리보기\n");
      out.write("const imageInput = document.getElementById('file');\n");
      out.write("const imageContainer = document.getElementById('imbox');\n");
      out.write("\n");
      out.write("imageInput.addEventListener('change', function (event) {\n");
      out.write("    const selectedFile = event.target.files[0];\n");
      out.write("    if (!selectedFile) return;\n");
      out.write("\n");
      out.write("    imageContainer.innerHTML = \"\"; // 기존 이미지 삭제\n");
      out.write("\n");
      out.write("    const reader = new FileReader();\n");
      out.write("    reader.onload = function () {\n");
      out.write("        const imageElement = document.createElement('img');\n");
      out.write("        imageElement.src = reader.result;\n");
      out.write("        imageContainer.appendChild(imageElement);\n");
      out.write("    };\n");
      out.write("    reader.readAsDataURL(selectedFile);\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
